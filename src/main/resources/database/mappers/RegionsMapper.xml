<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
  <!-- mapper namespace는 비우면 에러 -->
  <!-- namespace 값은 중복x -->
  <!-- 해당 mapper를 사용할 DAO의 풀캐키지 명으로 작성 -->
  <mapper namespace="com.winter.app.regions.RegionDAO">
  
	<sql id="search3">
		<!-- TITLE, CONTENTS, WRITER 있다 가정하 -->
		WHERE
		<choose>
			<when test="kind=='kind1'">
				TITLE LIKE '%'||#{search}||'%'
			</when>
			
			<when test="kind=='kind2'">
				CONTENTS LIKE '%'||#{search}||'%'
			</when>
			
			<otherwise><!-- 디폴트 -->
				WRITER LIKE '%'||#{search}||'%'
			</otherwise>
		</choose>	
	</sql>
	
	<sql id="search2">
   <!-- <bind name="p" value="'%'+parameter.getSearch()+'%'"/> -->
		<!-- TITLE, CONTENTS, WRITER -->
			<!-- mybatis. kind4경우? <where></>안에 넣으면 알아서 or,and 지워줌 -->
		<where>
			<!--  #{}안돼 test=”겟터 이름” 씀 -->
		<if test="kind=='kind1' or kind=='kind4'">
		TITLE LIKE '%'||#{search}||'%'
		</if>
		
		<if test="kind =='kind2' or kind=='kind4'">
		
		OR CONTENTS LIKE '%'||#{search}||'%'
		</if>
		
		<if test="kind=='kind3' or kind=='kind4'">
		OR WRITER LIKE '%'||#{search}||'%'
		</if>
		</where>
	</sql>
  	
  	<!-- 동일쿼리 -->
  	<sql id="search">
  		<!-- 입력안했다면 공백이니 '%%'->전 -->
		WHERE REGION_NAME LIKE '%'||#{search}||'%'
	</sql>
	
	
	<!-- delete -->  
  	<delete id="delete">
  		DELETE REGIONS WHERE REGION_ID=#{region_id}
  	</delete>
  	
  	<!-- update -->
  	<update id="update" parameterType="RegionDTO">
  		UPDATE REGIONS SET REGION_NAME=#{region_name}
  		WHERE REGION_ID=#{region_id}
  	</update>
  	
  	<!-- insert file -->
	<insert id="addFile" parameterType="RegionFileDTO">
  		INSERT INTO REGIONFILES
  		VALUES (FILE_SEQ.NEXTVAL, #{region_id},#{fileName}, #{oriName})
  	</insert>

  	
  	<!-- insert -->
  	<insert id="add" parameterType="RegionDTO">
  	          <!-- 멤버변수, dto의 세터 -->
  		<selectKey keyProperty="region_id" order="BEFORE" resultType="Long">
  			SELECT EMPLOYEES_SEQ.NEXTVAL FROM DUAL
  		</selectKey>
		INSERT INTO REGIONS
		VALUES (#{region_id}, #{region_name})
	</insert>
	 
  
	<!-- detail -->     											
	<!-- id(구별위해)는 DAO 의 메서드명 --><!-- SELECT의 결과 ""인 resultMap으로 보내 --><!-- ?에 들어갈 타입 -->
	<select id="getDetail" resultMap="getDetailResult" parameterType="com.winter.app.regions.RegionDTO">
	 	SELECT *
		FROM REGIONS
			LEFT OUTER JOIN 
			REGIONFILES
			USING (REGION_ID)
		WHERE REGION_ID=#{region_id}
	</select>
			
			  <!-- 최종결과 리턴 타입 -->   <!-- 셀렉트에서 호출 -->
	<resultMap type="RegionDTO" id="getDetailResult">
		<!-- PK로 사용하는 column -->
			<!-- my. column ->property담음 -->
		    <!-- 셀럭트결과 컬럼명 -->  <!-- RegionDTO속성명,세터이름,property대소구별o -->
		<id column="REGION_ID" property="region_id"/>
		<!-- PK 제외 나머지 -->
		<result column="REGION_NAME" property="region_name"/>
		<!-- 1:1 -->								<!-- 멤버변수 타입.풀네임인데 config -->
		<association property="regionFileDTO" javaType="RegionFileDTO">
			<!-- PK -->
			<id column="FILENUM" property="fileNum"/>
			<result column="FILENAME" property="fileName"/>
			<result column="ORINAME" property="oriName"/>
		</association>
		<!-- association 밑에 오면 안됨 -->
	</resultMap>
	
	
	<!-- list -->
	<select id="getList" resultType="RegionDTO" parameterType="Pager">
		<!-- SELECT * FROM REGIONS  이제 열개씩만 나열-->
		SELECT * FROM
		(
			SELECT ROWNUM R, RG.* FROM
				(
					SELECT * FROM REGIONS
					<include refid="search"></include>
					ORDER BY REGION_ID DESC
				) RG
		)
		WHERE R BETWEEN #{startRow} AND #{lastRow}
	</select>
	
	<!-- getTotal / type->config -->
	<select id="getTotal" resultType="Long" parameterType="Pager">
		SELECT COUNT(REGION_ID) FROM REGIONS
		<include refid="search"></include>
	</select>
	
	
	
	
<!-- <select id="getDetail" resultType="java.util.HashMap" parameterType="com.winter.app.regions.RegionDTO">
		SELECT REGION_ID, REGION_NAME FROM REGIONS WHERE REGION_ID=#{region_id}
	</select>
	
	list
	<select id="getList" resultType="java.util.HashMap">
		SELECT * FROM REGIONS
	</select> ???-->
  </mapper>